// ----------------------------------------------------------
// This Source Code Form is subject to the terms of the
// Mozilla Public License, v.2.0. If a copy of the MPL
// was not distributed with this file, You can obtain one
// at http://mozilla.org/MPL/2.0/.
// ----------------------------------------------------------
// Codebase: https://github.com/ArKuznetsov/yabr.1c/
// ----------------------------------------------------------

&НаКлиенте
Перем КаталогТекущейОбработки;

#Область ОбработчикиСобытийФормы

// Процедура - обработка события формы "ПриОткрытии"
//
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	МассивПараметровЗапуска = СтрРазделить(ПараметрЗапуска, " ");
	
	ПакетныйЗапуск = Ложь;
	
	НомерПараметра = МассивПараметровЗапуска.Найти("--yabrsettings");
	Если НЕ НомерПараметра = Неопределено Тогда
		ПутьКФайлуНастроек = МассивПараметровЗапуска[НомерПараметра + 1];
		ПакетныйЗапуск = Истина;
	КонецЕсли;

	НомерПараметра = МассивПараметровЗапуска.Найти("--work-dir");
	Если НЕ НомерПараметра = Неопределено Тогда
		РабочийКаталог = МассивПараметровЗапуска[НомерПараметра + 1];
	Иначе
		Файл = Новый Файл(ПутьКФайлуНастроек);
		РабочийКаталог = Сред(Файл.Путь, 1, СтрДлина(Файл.Путь) - 1);
	КонецЕсли;

	Если ПакетныйЗапуск Тогда
		ОбработатьДанные(Команды.ОбработатьДанные);
	КонецЕсли;
	
	НомерПараметра = МассивПараметровЗапуска.Найти("--closeapp");
	Если НЕ НомерПараметра = Неопределено Тогда
		Отказ = Истина;
		ЗавершитьРаботуСистемы(Ложь);
	КонецЕсли;

КонецПроцедуры // ПриОткрытии()

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиЭлементовФормы

// Процедура - обработка начала выбора файла
//
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	Диалог.Фильтр = "Настройки чтения данных (*.json)|*.json";
	Диалог.Заголовок = "Настройки чтения данных";

	ЗавершениеВыбораФайла = Новый ОписаниеОповещения("ПутьКФайлуНачалоВыбораЗавершение", ЭтотОбъект);
	
	Диалог.Показать(ЗавершениеВыбораФайла);
	
КонецПроцедуры // ПутьКФайлуНачалоВыбора()

// Процедура - продолжение обработки выбора файла
//
&НаКлиенте
Процедура ПутьКФайлуНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если НЕ ТипЗнч(ВыбранныеФайлы) = Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКФайлуНастроек = ВыбранныеФайлы[0];
	
	Если НЕ ЗначениеЗаполнено(РабочийКаталог) Тогда
		Файл = Новый Файл(ПутьКФайлуНастроек);
		РабочийКаталог = Сред(Файл.Путь, 1, СтрДлина(Файл.Путь) - 1);
	КонецЕсли;
	
КонецПроцедуры // ПутьКФайлуНачалоВыбораЗавершение()

// Процедура - обработка начала выбора рабочего каталога
//
&НаКлиенте
Процедура РабочийКаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)

	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	Диалог.Заголовок = "Рабочий каталог";

	ЗавершениеВыбораФайла = Новый ОписаниеОповещения("РабочийКаталогНачалоВыбораЗавершение", ЭтотОбъект);
	
	Диалог.Показать(ЗавершениеВыбораФайла);
	
КонецПроцедуры // РабочийКаталогНачалоВыбора

// Процедура - продолжение обработки выбора рабочего каталога
//
&НаКлиенте
Процедура РабочийКаталогНачалоВыбораЗавершение(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если НЕ ТипЗнч(ВыбранныеФайлы) = Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	Если ВыбранныеФайлы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	РабочийКаталог = ВыбранныеФайлы[0];
	
КонецПроцедуры // РабочийКаталогНачалоВыбораЗавершение()

#КонецОбласти // ОбработчикиЭлементовФормы

#Область ОбработчикиКомандФормы

// Процедура - обработчик команды "ОбработатьДанные" на сервере
//
&НаСервере
Процедура ОбработатьДанныеНаСервере(Знач ПараметрыОбработкиДанных)
	
	МенеджерОбработкиДанных = ПолучитьВнешнююОбработкуПоИмени("МенеджерОбработкиДанных");
	
	Лог = МенеджерОбработкиДанных.Лог();
	Если РежимОтладки Тогда
		Лог.УстановитьУровень(Лог.УровниЛога.Отладка);
	КонецЕсли;
	
	МенеджерОбработкиДанных.ДобавитьРабочийКаталог("$yabrDir", КаталогТекущейОбработки());

	Файл = Новый Файл(ПутьКФайлуНастроек);
	МенеджерОбработкиДанных.ДобавитьРабочийКаталог("$settingsDir", Сред(Файл.Путь, 1, СтрДлина(Файл.Путь) - 1));
	
	Если ЗначениеЗаполнено(РабочийКаталог) Тогда
		МенеджерОбработкиДанных.ДобавитьРабочийКаталог("$workDir", РабочийКаталог);
	Иначе
		МенеджерОбработкиДанных.ДобавитьРабочийКаталог("$workDir",
		                                               МенеджерОбработкиДанных.РабочийКаталог("$settingsDir"));
	КонецЕсли;
	
	МенеджерОбработкиДанных.УстановитьПараметрыОбработкиДанных(ПараметрыОбработкиДанных);
	
	МенеджерОбработкиДанных.ОбработатьДанные();
	
КонецПроцедуры // ОбработатьДанныеНаСервере()

// Процедура - обработчик команды "ОбработатьДанные"
//
&НаКлиенте
Процедура ОбработатьДанные(Команда)
	
	АдресПараметров = ПоместитьВоВременноеХранилище(Новый ДвоичныеДанные(ПутьКФайлуНастроек),
	                                                ЭтотОбъект.УникальныйИдентификатор);
	
	ОбработатьДанныеНаСервере(АдресПараметров);
	
КонецПроцедуры // ОбработатьДанные()

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

// Функция - ищет внешнюю обработку по указанному имени рядом с текущей и подключает ее
// возвращает объект подключенной обработки
//
// Параметры:
//  ИмяОбработки         - Строка        - имя внешней обработки
// 
// Возвращаемое значение:
//  ВнешняяОбработкаОбъект        - внешняя обработка
// 
&НаСервере
Функция ПолучитьВнешнююОбработкуПоИмени(ИмяОбработки)
	
	ОбработкаОбъект = РеквизитФормыВЗначение("Объект");
	
	ФайлЭтойОбработки = Новый Файл(ОбработкаОбъект.ИспользуемоеИмяФайла);
	
	ПутьКОбработке = ФайлЭтойОбработки.Путь + ИмяОбработки + ФайлЭтойОбработки.Расширение;
	
	Возврат ВнешниеОбработки.Создать(ПутьКОбработке, Ложь);
	
КонецФункции // ПолучитьВнешнююОбработкуПоИмени()

// Функция - возвращает путь к каталогу текущей обработки
// 
// Возвращаемое значение:
//    Строка       - путь к каталогу текущей обработки
//
&НаСервере
Функция КаталогТекущейОбработки() Экспорт
    
    ТекОбъект = РеквизитФормыВЗначение("Объект");
    
    Файл = Новый Файл(ТекОбъект.ИспользуемоеИмяФайла);
    
    Возврат Сред(Файл.Путь, 1, СтрДлина(Файл.Путь) - 1);
    
КонецФункции // КаталогТекущейОбработки()

#КонецОбласти // СлужебныеПроцедурыИФункции
